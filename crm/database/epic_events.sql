-- MySQL Script generated by MySQL Workbench
-- Fri Feb 28 13:46:42 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Epic_events_database
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Epic_events_database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Epic_events_database` DEFAULT CHARACTER SET utf8 ;
USE `Epic_events_database` ;

-- -----------------------------------------------------
-- Table `Epic_events_database`.`departments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`departments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `deleted_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Epic_events_database`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `last_name` VARCHAR(70) NULL,
  `first_name` VARCHAR(70) NULL,
  `email` VARCHAR(70) NOT NULL,
  `username` VARCHAR(70) NOT NULL,
  `_password` VARCHAR(250) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `deleted_at` DATETIME NULL DEFAULT NULL,
  `departments_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `login_UNIQUE` (`username` ASC) VISIBLE,
  INDEX `fk_users_departements1_idx` (`departments_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_departements1`
    FOREIGN KEY (`departments_id`)
    REFERENCES `Epic_events_database`.`departments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Epic_events_database`.`companies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`companies` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(70) NULL,
  `siret` VARCHAR(45) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `deleted_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `siret_UNIQUE` (`siret` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Epic_events_database`.`clients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`clients` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `email` VARCHAR(70) NOT NULL,
  `phone_number` VARCHAR(45) NULL,
  `creation_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `deleted_at` DATETIME NULL,
  `companies_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_clients_companies1_idx` (`companies_id` ASC) VISIBLE,
  CONSTRAINT `fk_clients_companies1`
    FOREIGN KEY (`companies_id`)
    REFERENCES `Epic_events_database`.`companies` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Epic_events_database`.`contract_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`contract_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `status` VARCHAR(45) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `deleted_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Epic_events_database`.`contracts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`contracts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `total_amount` DECIMAL(7,2) NOT NULL,
  `clients_id` INT NOT NULL,
  `contract_status_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `deleted_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_contracts_clients1_idx` (`clients_id` ASC) VISIBLE,
  INDEX `fk_contracts_contract_status1_idx` (`contract_status_id` ASC) VISIBLE,
  CONSTRAINT `fk_contracts_clients1`
    FOREIGN KEY (`clients_id`)
    REFERENCES `Epic_events_database`.`clients` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_contracts_contract_status1`
    FOREIGN KEY (`contract_status_id`)
    REFERENCES `Epic_events_database`.`contract_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Epic_events_database`.`events`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`events` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `event_startdate` DATETIME NULL,
  `event_enddate` DATETIME NULL,
  `location` VARCHAR(70) NULL,
  `attendees` INT NULL,
  `note` TEXT(1000) NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` VARCHAR(45) NULL DEFAULT 'CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP',
  `deleted_at` VARCHAR(45) NULL,
  `clients_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_events_clients2_idx` (`clients_id` ASC) VISIBLE,
  CONSTRAINT `fk_events_clients`
    FOREIGN KEY (`clients_id`)
    REFERENCES `Epic_events_database`.`clients` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Epic_events_database`.`invoices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`invoices` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `amount` DECIMAL(7,2) NULL,
  `contracts_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `deleted_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_invoices_contracts1_idx` (`contracts_id` ASC) VISIBLE,
  CONSTRAINT `fk_invoices_contracts1`
    FOREIGN KEY (`contracts_id`)
    REFERENCES `Epic_events_database`.`contracts` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Epic_events_database`.`users_has_clients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`users_has_clients` (
  `users_id` INT NOT NULL,
  `clients_id` INT NOT NULL,
  PRIMARY KEY (`users_id`, `clients_id`),
  INDEX `fk_users_has_clients_clients1_idx` (`clients_id` ASC) VISIBLE,
  INDEX `fk_users_has_clients_users1_idx` (`users_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_clients_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `Epic_events_database`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_clients_clients1`
    FOREIGN KEY (`clients_id`)
    REFERENCES `Epic_events_database`.`clients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Epic_events_database`.`events`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`events` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `event_startdate` DATETIME NULL,
  `event_enddate` DATETIME NULL,
  `location` VARCHAR(70) NULL,
  `attendees` INT NULL,
  `note` TEXT(1000) NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` VARCHAR(45) NULL DEFAULT 'CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP',
  `deleted_at` VARCHAR(45) NULL,
  `clients_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_events_clients2_idx` (`clients_id` ASC) VISIBLE,
  CONSTRAINT `fk_events_clients`
    FOREIGN KEY (`clients_id`)
    REFERENCES `Epic_events_database`.`clients` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Epic_events_database`.`users_has_events`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`users_has_events` (
  `users_id` INT NOT NULL,
  `events_id` INT NOT NULL,
  PRIMARY KEY (`users_id`, `events_id`),
  INDEX `fk_users_has_events_users1_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_users_has_events_events2_idx` (`events_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_has_events_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `Epic_events_database`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_events_events2`
    FOREIGN KEY (`events_id`)
    REFERENCES `Epic_events_database`.`events` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Epic_events_database`.`permissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`permissions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `deleted_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Epic_events_database`.`departments_has_permissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Epic_events_database`.`departments_has_permissions` (
  `departments_id` INT NOT NULL,
  `permissions_id` INT NOT NULL,
  PRIMARY KEY (`departments_id`, `permissions_id`),
  INDEX `fk_departements_has_permissions_permissions1_idx` (`permissions_id` ASC) VISIBLE,
  CONSTRAINT `fk_departements_has_permissions_departements1`
    FOREIGN KEY (`departments_id`)
    REFERENCES `Epic_events_database`.`departments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_departements_has_permissions_permissions1`
    FOREIGN KEY (`permissions_id`)
    REFERENCES `Epic_events_database`.`permissions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
